<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Seed Atlas Bioinformatics</title>
        <link>https://cmart-seq.github.io/seedatlas.github.io/posts/</link>
        <description>Recent content in Posts on Seed Atlas Bioinformatics</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Wed, 27 Jul 2022 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://cmart-seq.github.io/seedatlas.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Smartseq2 Seed Nuclei Playground</title>
            <link>https://cmart-seq.github.io/seedatlas.github.io/posts/endo_smrt_shiny/</link>
            <pubDate>Wed, 27 Jul 2022 00:00:00 +0000</pubDate>
            
            <guid>https://cmart-seq.github.io/seedatlas.github.io/posts/endo_smrt_shiny/</guid>
            <description>Here is an R shiny app for exploring the effects of tuning certain parameters on single cell analysis clustering results. The data is from 1437 seed nuclei from Picard et al 2021.
Please wait ~30 seconds for the analysis to initialize with default parameters. Scroll to the bottom to view results.
The analysis will re-run from whatever parameter you change. In general, the more upstream your edit, the longer the analysis will take.</description>
            <content type="html"><![CDATA[<p>Here is an R shiny app for exploring the effects of tuning certain parameters on single cell analysis clustering results. The data is from 1437 seed nuclei from <a href="https://www.nature.com/articles/s41477-021-00922-0">Picard et al 2021</a>.</p>
<p>Please wait ~30 seconds for the analysis to initialize with default parameters. Scroll to the bottom to view results.</p>
<p>The analysis will re-run from whatever parameter you change. In general, the more upstream your edit, the longer the analysis will take.</p>
<p>Gene and metadata plotting occurs instantaneously.</p>
<p>Please use <a href="https://www.arabidopsis.org/index.jsp">TAIR</a> identifiers for gene plotting only.</p>
<iframe height="800" width="100%" frameborder="no" name="iframe" src="https://cmart-seq.shinyapps.io/scrna-app-2022/"></iframe>
]]></content>
        </item>
        
        <item>
            <title>CellRanger Alignment Example</title>
            <link>https://cmart-seq.github.io/seedatlas.github.io/posts/cellranger_alignment/</link>
            <pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate>
            
            <guid>https://cmart-seq.github.io/seedatlas.github.io/posts/cellranger_alignment/</guid>
            <description>Here, we align the NovaSeq outputs for 30k single nuclei profiles from DAP5 seeds using CellRanger. One 10x reaction can process 10k nuclei max, so the profiles are split across 3 reactions (DAP5A, DAP5B, DAP5C). CellRanger processes each reaction separately.
Organization and raw data naming: We begin in the command line with the data copied from GTC storage to your solexa_gehring location, following this file structure:
./cellranger/ |-raw_data/ |-220630_DAP5A_S1_L001_R1_001.fastq.gz |-220630_DAP5A_S1_L001_R2_001.fastq.gz |-220630_DAP5A_S1_L002_R1_001.</description>
            <content type="html"><![CDATA[<p>Here, we align the NovaSeq outputs for 30k single nuclei profiles from DAP5 seeds using CellRanger. One 10x reaction can process 10k nuclei max, so the profiles are split across 3 reactions (DAP5A, DAP5B, DAP5C). CellRanger processes each reaction separately.</p>
<h2 id="organization-and-raw-data-naming">Organization and raw data naming:</h2>
<p>We begin in the command line with the data copied from GTC storage to your solexa_gehring location, following this file structure:</p>
<pre tabindex="0"><code>./cellranger/
    |-raw_data/
        |-220630_DAP5A_S1_L001_R1_001.fastq.gz
        |-220630_DAP5A_S1_L001_R2_001.fastq.gz
        |-220630_DAP5A_S1_L002_R1_001.fastq.gz
        |-220630_DAP5A_S1_L002_R2_001.fastq.gz
        |-220630_DAP5B_S2_L001_R1_001.fastq.gz
        |-220630_DAP5B_S2_L001_R2_001.fastq.gz
        |-220630_DAP5B_S2_L002_R1_001.fastq.gz
        |-220630_DAP5B_S2_L002_R2_001.fastq.gz
        |-220630_DAP5C_S3_L001_R1_001.fastq.gz
        |-220630_DAP5C_S3_L001_R2_001.fastq.gz
        |-220630_DAP5C_S3_L002_R1_001.fastq.gz
        |-220630_DAP5C_S3_L002_R2_001.fastq.gz
    |-DAP5A/  
    |-DAP5B/
    |-DAP5C/
    |-Arabidopsis_thaliana.TAIR10.43.gtf
    |-BSgenome.Athaliana.TAIR.TAIR9.fasta
</code></pre><p>Note that the raw data file names are not the names generated by illumina/GTC. CellRanger requires this naming convention:</p>
<pre tabindex="0"><code>[SAMPLE NAME]_S[X]_L00[LANE NUMBER]_[READ TYPE]_001.fastq.gz
</code></pre><p>Link with more info: <a href="https://kb.10xgenomics.com/hc/en-us/articles/115003802691-How-do-I-prepare-Sequence-Read-Archive-SRA-data-from-NCBI-for-Cell-Ranger-">https://kb.10xgenomics.com/hc/en-us/articles/115003802691-How-do-I-prepare-Sequence-Read-Archive-SRA-data-from-NCBI-for-Cell-Ranger-</a></p>
<p>Example of naming change, while copying to your raw_data folder in bash:</p>
<pre tabindex="0"><code>#cd to your raw_data folder
cp /GTC/path/to/FASTQ/L224_1246_S1_L001_R1_001.fastq.gz ./220630_DAP5A_S1_L001_R1_001.fastq.gz 
</code></pre><h2 id="preparing-a-custom-reference-for-a-thaliana">Preparing a custom reference for A. thaliana:</h2>
<p>CellRanger requires a specialized directory structure for the reference genome and annotation. To construct a custom reference, prepare your .gtf file with cellranger mkgtf. Then, generate the reference file structure with cellranger mkref.</p>
<p>In tak, call the v6 version of cellranger with cellranger6. The default version of cellranger (version 4) on tak cannot handle custom reference generation with plant genomes.</p>
<p>In bash, filter:</p>
<pre tabindex="0"><code>cellranger6 mkgtf Arabidopsis_thaliana.TAIR10.43.gtf Arabidopsis_thaliana.TAIR10.43.filtered.gtf
</code></pre><p>In bash, make the reference:</p>
<pre tabindex="0"><code>cellranger6 mkref --genome=TAIR9 --fasta=BSgenome.Athaliana.TAIR.TAIR9.fasta --genes=Arabidopsis_thaliana.TAIR10.43.filtered.gtf
</code></pre><p>Now, there is a new folder in your analysis directory containing the custom reference compatible with CellRanger:</p>
<pre tabindex="0"><code>./cellranger/
    |-raw_data/
        |-220630_DAP5A_S1_L001_R1_001.fastq.gz
        |-220630_DAP5A_S1_L001_R2_001.fastq.gz
        |-220630_DAP5A_S1_L002_R1_001.fastq.gz
        |-220630_DAP5A_S1_L002_R2_001.fastq.gz
        |-220630_DAP5B_S2_L001_R1_001.fastq.gz
        |-220630_DAP5B_S2_L001_R2_001.fastq.gz
        |-220630_DAP5B_S2_L002_R1_001.fastq.gz
        |-220630_DAP5B_S2_L002_R2_001.fastq.gz
        |-220630_DAP5C_S3_L001_R1_001.fastq.gz
        |-220630_DAP5C_S3_L001_R2_001.fastq.gz
        |-220630_DAP5C_S3_L002_R1_001.fastq.gz
        |-220630_DAP5C_S3_L002_R2_001.fastq.gz
    |-DAP5A/  
    |-DAP5B/
    |-DAP5C/
    |-Arabidopsis_thaliana.TAIR10.43.gtf
    |-BSgenome.Athaliana.TAIR.TAIR9.fasta
    |-TAIR9/
</code></pre><h2 id="running-the-cellranger-alignment">Running the CellRanger alignment</h2>
<p>Again, CellRanger processes one reaction at a time, so you must launch an alignment for each sample.</p>
<p>In bash, DAP5A:</p>
<pre tabindex="0"><code>cd ./raw_data/DAP5A

bsub -n 64 cellranger6 count --id=220630_whole_seed_DAP5A_colcol --transcriptome=TAIR9 --fastqs=../raw_data --sample=220630_DAP5A --expect-cells=10000 --localcores=8 --localmem=64
</code></pre><p>DAP5B:</p>
<pre tabindex="0"><code>cd ./raw_data/DAP5B

bsub -n 64 cellranger6 count --id=220630_whole_seed_DAP5B_colcol --transcriptome=/lab/solexa_gehring/carly/snRNA_seed_dev/cellranger/TAIR9 --fastqs=../raw_data --sample=220630_DAP5B --expect-cells=10000 --localcores=8 --localmem=64
</code></pre><p>DAP5C:</p>
<pre tabindex="0"><code>cd ./raw_data/DAP5C

bsub -n 64 cellranger6 count --id=220630_whole_seed_DAP5C_colcol --transcriptome=/lab/solexa_gehring/carly/snRNA_seed_dev/cellranger/TAIR9 --fastqs=../raw_data --sample=220630_DAP5C --expect-cells=10000 --localcores=8 --localmem=64
</code></pre><h2 id="monitoring-alignment-progress">Monitoring alignment progress</h2>
<p>CellRanger provides a very useful link for visualizing the status of your alignment for each sample. To access the link for an alignment after you&rsquo;ve submitted the cellranger count to the cluster, find the LSF job ID using the bjobs command, in bash:</p>
<pre tabindex="0"><code>bjobs
</code></pre><p>You&rsquo;ll see the job IDs as 7-digit numbers, for example: 6187243</p>
<p>Get detailed, instantaneous information about the job by using the bpeek command:</p>
<pre tabindex="0"><code>bpeek 6187243
</code></pre><p>When you run bpeek on a cellranger alignment, one of the first lines you will see in the output will contain a unique link, for example: http://c1b6:43737?auth=QNPwUNtdj7piPshR2dhGuzTRqy3PQKEA4w5Zp4QlRUQ</p>
<p>Copy and paste this into your browser to monitor the status of that run</p>
<h2 id="locating-qc-files">Locating QC files</h2>
<p>When the run finishes, you will have the following files in your analysis directory (this is not a comprehensive structure, but contains the paths to the QC and the most important outs):</p>
<pre tabindex="0"><code>./cellranger/
    |-raw_data/
        |-220630_DAP5A_S1_L001_R1_001.fastq.gz
        |-220630_DAP5A_S1_L001_R2_001.fastq.gz
        |-220630_DAP5A_S1_L002_R1_001.fastq.gz
        |-220630_DAP5A_S1_L002_R2_001.fastq.gz
        |-220630_DAP5B_S2_L001_R1_001.fastq.gz
        |-220630_DAP5B_S2_L001_R2_001.fastq.gz
        |-220630_DAP5B_S2_L002_R1_001.fastq.gz
        |-220630_DAP5B_S2_L002_R2_001.fastq.gz
        |-220630_DAP5C_S3_L001_R1_001.fastq.gz
        |-220630_DAP5C_S3_L001_R2_001.fastq.gz
        |-220630_DAP5C_S3_L002_R1_001.fastq.gz
        |-220630_DAP5C_S3_L002_R2_001.fastq.gz

    |-DAP5A
        |-220630_whole_seed_DAP5A_colcol
            |-outs
                |-web_summary.html
                |-filtered_feature_bc_matrix
                    |-barcodes.tsv.gz
                    |-features.tsv.gz
                    |-matrix.mtx.gz    
    |-DAP5B
        |-220630_whole_seed_DAP5B_colcol
            |-outs
                |-web_summary.html
                |-filtered_feature_bc_matrix
                    |-barcodes.tsv.gz
                    |-features.tsv.gz
                    |-matrix.mtx.gz
    |-DAP5C
        |-220630_whole_seed_DAP5B_colcol
            |-outs
                |-web_summary.html
                |-filtered_feature_bc_matrix
                    |-barcodes.tsv.gz
                    |-features.tsv.gz
                    |-matrix.mtx.gz
</code></pre><p>Inspect the run QCs in the web_summary.html, and the filtered_feature_bc_matrix directory is the path you will use for loading the sample into programs like Seurat</p>
<p>🥳️ Happy clustering and plotting! 🥳️</p>
]]></content>
        </item>
        
    </channel>
</rss>
